syntax = "proto3";

package ycrpc.v1;

import "buf/validate/validate.proto";

option go_package = "ycrpc/proto/gen/ycrpc/v1;ycrpcv1";

enum Region {
  REGION_UNSPECIFIED = 0;
  REGION_USA = 1;
  REGION_EUR = 2;
  REGION_IND = 3;
  REGION_SGP = 4;
}

message SignupRequest {
  string full_name = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 100
    pattern: "^[a-zA-Z\\s\\-\\.]+$"
  }];

  string email = 2 [(buf.validate.field).string.email = true];

  string password = 3 [(buf.validate.field).string = {
    min_len: 8
    max_len: 128
  }];

  Region region = 4 [(buf.validate.field).enum = {
    defined_only: true
    not_in: [0] /* REGION_UNSPECIFIED is not allowed */
  }];
}

message SignupResponse {
  string handle = 1;
}

// Error detail message used with INVALID_ARGUMENT responses via Connect errors.
// Carries the list of invalid field names.
message InvalidFields {
  repeated string fields = 1;
}

// Errors are returned using Connect's error model, which maps to gRPC status codes
// and supports typed protobuf error details attached with AddDetail.
// See: https://connectrpc.com/docs/go/errors and https://grpc.io/docs/guides/status-codes/
service YCRPCService {
  // Signup creates a new user account.
  //
  // Error handling (Connect):
  //   - INVALID_ARGUMENT (code 3):
  //       Returns a ycrpc.v1.InvalidFields detail listing invalid field names.
  //       Message is a short summary like "invalid request". Example JSON:
  //       {
  //         "code": "invalid_argument",
  //         "message": "invalid request",
  //         "details": [
  //           {
  //             "@type": "type.googleapis.com/ycrpc.v1.InvalidFields",
  //             "fields": ["email", "password"]
  //           }
  //         ]
  //       }
  //   - ALREADY_EXISTS (code 6):
  //       Message: "user with this email address already exists".
  //       Details are optional and typically omitted.
  //   - INTERNAL (code 13):
  //       Message is empty and no details are returned.
  rpc Signup(SignupRequest) returns (SignupResponse) {}
}
