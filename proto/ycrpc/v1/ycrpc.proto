syntax = "proto3";

package ycrpc.v1;

import "buf/validate/validate.proto";

option go_package = "ycrpc/proto/gen/ycrpc/v1;ycrpcv1";

enum Region {
  REGION_UNSPECIFIED = 0;
  REGION_USA = 1;
  REGION_EUR = 2;
  REGION_IND = 3;
  REGION_SGP = 4;
}

message SignupRequest {
  string full_name = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 100
    pattern: "^[a-zA-Z\\s\\-\\.]+$"
  }];

  string email = 2 [(buf.validate.field).string.email = true];

  string password = 3 [(buf.validate.field).string = {
    min_len: 8
    max_len: 128
  }];

  Region region = 4 [(buf.validate.field).enum = {
    defined_only: true
    not_in: [0] /* REGION_UNSPECIFIED is not allowed */
  }];
}

message SignupResponse {
  string handle = 1;
}

// In case of errors, the Returns will have standard gRPC status codes
// https://grpc.io/docs/guides/status-codes/
service YCRPCService {
  // Signup creates a new user account.
  //
  // Error codes:
  //   - INVALID_ARGUMENT (code 3):
  //       Details contain an array of invalid fields, such as:
  //       ["email", "password", "full_name", "region"]
  //   - ALREADY_EXISTS (code 6): User with this email address already exists
  //   - INTERNAL (code 13): Unexpected server error occurred
  rpc Signup(SignupRequest) returns (SignupResponse) {}
}
